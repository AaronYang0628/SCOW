stages:
  - build
  - deploy

build:
  stage: build
  image: docker

  variables:
    IMAGE_TAG: $CI_REGISTRY/chenjunda/scow-docs/master
    CACHE_IMAGE: $CI_REGISTRY/chenjunda/scow-docs/cache

  before_script:
    - /shared/connect -u $IAAA_USERNAME -p "$(echo $IAAA_PASSWORD | base64 -d)"
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

  script:
    # push build target to registry as cache
    - docker pull $CACHE_IMAGE || true
    - docker build --cache-from $CACHE_IMAGE --target=builder --build-arg BASE_URL=/docs/ --build-arg BUILDKIT_INLINE_CACHE=1 -t $CACHE_IMAGE .
    - docker push $CACHE_IMAGE

    # build runner image
    - docker pull $IMAGE_TAG || true
    - docker build --cache-from $IMAGE_TAG --build-arg BASE_URL=/docs/ --build-arg BUILDKIT_INLINE_CACHE=1 -t $IMAGE_TAG -t "$IMAGE_TAG:$CI_COMMIT_SHA" .
    - docker push $IMAGE_TAG
    - docker push "$IMAGE_TAG:$CI_COMMIT_SHA"

  after_script:
    - /shared/connect -c

deploy-job:
  stage: deploy
  image: curlimages/curl

  script:
    - 'curl -v -H "x-deploy-agent-key: ${DEPLOY_AGENT_KEY}" -H "content-type: text/plain" -X POST ${DEPLOY_AGENT_URL}'
